}
return(df_count)
}
count_unique("False")
count_unique("True")
count_unique("True")
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
str = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df[[1]]
df
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df
list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)
count_unique("False")
str
str = "False"
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
str = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
count_unique("False")
str = "True"
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
str = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
str
str = "True"
st
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
str = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
df
df_count = tibble()
c(str,df[[k]][i,j] %>% as.character)
text = vector()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
text = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
text
str
str = "True"
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
text = vector()
for(k in 1:length(df)){
text = c(str,df[[k]][i,j] %>% as.character)
}
text
text = c(text,df[[k]][i,j] %>% as.character)
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(text,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
count_unique("False")
count_unique("True")
str
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(text,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
return(df_count)
df_count
count_unique = function(str){
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(contains("SC")))
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(text,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
df_count
return(df_count)
}
count_unique("False")
count_unique("True")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
)
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString"))
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
)
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
pivot_longer(starts_with("..."), names_to = 'names', values_to = "unique_count")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
ggplot() +
geom_boxplot(aes(x = RandomString,y = unique_count))
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
ggplot() +
geom_point(aes(x = RandomString,y = unique_count))
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
ggplot() +
geom_violin(aes(x = RandomString,y = unique_count))
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count")
counts
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
pivot_wider(values_from = unique_count, names_from = "RandomString")
counts
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
dplyr::select(-names) %>%
pivot_wider(values_from = unique_count, names_from = "RandomString")
counts
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
dplyr::select(-names)
counts
counts[1]
counts[1] %>% unlist()
counts[2] %>% unlist()
rbind(counts[1] %>% unlist(),
counts[2] %>% unlist())
for_chi = rbind(counts[1] %>% unlist(),
counts[2] %>% unlist())
for_chi
chisq.test(for_chi)
for_chi[1,]
for_chi[1,] %>% mean
for_chi[2,] %>% mean
# Example data
count1 <- c(10, 20, 30, 40)
count2 <- c(15, 25, 35, 45)
# Combine the counts into a matrix
counts <- rbind(count1, count2)
# Perform the chi-squared test
result <- chisq.test(counts)
# Print the test result
print(result)
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
dplyr::select(-names) %>%
pivot_wider(values_from = unique_count, names_from = "RandomString")
for_chi = rbind(counts[1] %>% unlist(),
counts[2] %>% unlist())
chisq.test(for_chi)
lenght(for_chi[1,])
length(for_chi[1,])
t.test(for_chi)
result = t.test(counts[1] %>% unlist(),  counts[2] %>% unlist(), paired = TRUE)
result
counts
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count") %>%
dplyr::select(-names)
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("Random"), names_to = 'names', values_to = "unique_count")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("rand"), names_to = 'names', values_to = "unique_count")
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("rand"), names_to = 'names', values_to = "unique_count")
counts %>% filter(RandomString == "False")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("rand"), names_to = 'names', values_to = "unique_count")
counts %>% filter(rand == "False")
counts %>% filter(rand == "False")
count_unique("False")
df = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(Title,contains("SC")))
df
df_title = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(Title,contains("SC")))
df = lapply(df_title, function(x) x %>% dplyr::select(-Title))
df
title = lapply(df_title, function(x) x %>% dplyr::select(Title))[[1]]
title
count_unique = function(str){
df_title = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(Title,contains("SC")))
df = lapply(df_title, function(x) x %>% dplyr::select(-Title))
title = lapply(df_title, function(x) x %>% dplyr::select(Title))[[1]]
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(text,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
out = cbind(title,df_count)
return(out)
}
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("rand"), names_to = 'names', values_to = "unique_count")
count_unique("False")
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
)
count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(!starts_with("rand"), names_to = 'names', values_to = "unique_count")
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(starts_with("..."), names_to = 'names', values_to = "unique_count")
counts
counts = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(starts_with("..."), names_to = 'names', values_to = "unique_count") %>%
pivot_wider(values_from = unique_count,names_from = rand)
counts
result = t.test(counts$False,  counts$True, paired = TRUE)
result
print(result)
counts_long = count_unique("False") %>%
mutate(rand = "False") %>%
bind_rows(
count_unique("True") %>%
mutate(rand = "True")
) %>%
#  setNames(c("Final","Reflection","Initial","Final","Reflection","Initial","Final","Reflection","Initial","RandomString")) %>%
pivot_longer(starts_with("..."), names_to = 'names', values_to = "unique_count")
counts = counts_long %>%
pivot_wider(values_from = unique_count,names_from = rand)
counts_long
counts_long %>%
ggplot() +
geom_boxplot(aes(x = rand,y = unique_count))
counts_long %>%
ggplot() +
geom_boxplot(aes(x = rand,y = unique_count)) +
theme_classic()
counts_long %>%
ggplot() +
geom_boxplot(aes(x = rand,y = unique_count)) +
theme_classic() +
xlab("Variable Random String")
counts_long %>%
ggplot() +
geom_boxplot(aes(x = rand,y = unique_count)) +
theme_classic() +
xlab("Variable Random String") +
ylab("Number of Unique Responses for Across Five AI Committee Members")
ggsave(paste0("Figures/Figure4_supp",supp,".png"), device = 'png', width = 8.5*.8, height = 4.84*.8)
ggsave(paste0("Figures/FigureS1",supp,".png"), device = 'png', width = 8.5*.8, height = 4.84*.8)
counts_long %>%
ggplot() +
geom_boxplot(aes(x = rand,y = unique_count)) +
theme_classic() +
xlab("Variable Random String") +
ylab("Number of Unique Responses")
ggsave(paste0("Figures/FigureS1",supp,".png"), device = 'png', width = 8.5*.8, height = 4.84*.8)
library(tidyverse)
library(ggrepel)
library(patchwork)
library(beyonce)
library(ggbeeswarm)
### Test effect of random string
### Figure S1
count_unique = function(str){
df_title = list.files(path = "./Paper-Results/rand_test", pattern = str,
full.names = TRUE)  %>%
lapply(function(x) read.csv(x) %>% as_tibble() %>%
dplyr::select(Title,contains("SC")))
df = lapply(df_title, function(x) x %>% dplyr::select(-Title))
title = lapply(df_title, function(x) x %>% dplyr::select(Title))[[1]]
df_count = tibble()
for(i in 1:nrow(df[[1]])){
for(j in 1:ncol(df[[1]])){
text = vector()
for(k in 1:length(df)){
text = c(text,df[[k]][i,j] %>% as.character)
}
df_count[i,j] = length(unique(text))
}
}
out = cbind(title,df_count)
return(out)
}
count_unique("False")
count_unique("gpt")
count_unique("gpt")
count_unique("gpt")
library(here)
source(here("_Analysis/1_load.R")) # Load gdx files
